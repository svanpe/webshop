steps:
- name: 'gcr.io/cloud-builders/mvn'
  id: 'build order api'
  args: ['clean','package','-forder-api/pom.xml']
- name: 'gcr.io/cloud-builders/docker'
  id: 'build order api image'
  args: ['build', '--tag=gcr.io/$PROJECT_ID/order-api:$SHORT_SHA', './order-api']
- name: 'gcr.io/cloud-builders/mvn'
  id: 'build frontend app'
  args: ['clean','package','-fwebshop-front/pom.xml']
- name: 'gcr.io/cloud-builders/docker'
  id: 'build frontend mvc image'
  args: ['build', '--tag=gcr.io/$PROJECT_ID/webshop-front:$SHORT_SHA', './webshop-front']
- name: 'gcr.io/cloud-builders/docker'
  id: 'build webshop view image'
  args: ['build', '--tag=gcr.io/$PROJECT_ID/webshop-vue:$SHORT_SHA', './webshop-vue']
- name: 'gcr.io/cloud-builders/gcloud'
  id: Clone env repository
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    gcloud source repos clone webshop-env && \
    cd webshop-env && \
    git checkout candidate && \
    git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')

- name: 'gcr.io/cloud-builders/gcloud'
  id: Generate manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     sed "s/CLOUD_REP/gcr.io/g" webshop.yaml.tpl | \
     sed "s/CLOUD_PROJECT/${PROJECT_ID}/g" webshop.yaml.tpl | \
     sed "s/COMMIT_SHA/${SHORT_SHA}/g" > webshop-env/webshop.yaml

- name: 'gcr.io/cloud-builders/gcloud'
  id: Push manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     set -x && \
     cd webshop-env && \
     git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)') && \
     git add webshop.yaml && \
     git commit -m "Deploying new image" && \
     git push origin candidate

images: 
- 'gcr.io/$PROJECT_ID/order-api:$SHORT_SHA'
- 'gcr.io/$PROJECT_ID/webshop-front:$SHORT_SHA'
- 'gcr.io/$PROJECT_ID/webshop-vue:$SHORT_SHA'
